
# Initialize board
board = [" " for _ in range(9)]
human = "X"
computer = "O"

def print_board(board):
    for i in range(0, 9, 3):
        print(" | ".join(board[i:i+3]))
        if i < 6:
            print("-" * 9)

def reset_board():
    return [" " for _ in range(9)]

def check_winner(board, player):
    win_patterns = [(0, 1, 2), (3, 4, 5), (6, 7, 8), (0, 3, 6), (1, 4, 7), (2, 5, 8), (0, 4, 8), (2, 4, 6)]
    return any(board[i] == board[j] == board[k] == player for i, j, k in win_patterns)

def check_tie(board):
    return " " not in board

def minimax(board, depth, is_maximizing):
    if check_winner(board, computer):
        return 1
    elif check_winner(board, human):
        return -1
    elif check_tie(board):
        return 0
    
    if is_maximizing:
        best = float('-inf')
        for i in range(9):
            if board[i] == " ":
                board[i] = computer
                best = max(best, minimax(board, depth + 1, False))
                board[i] = " "
        return best
    else:
        best = float('inf')
        for i in range(9):
            if board[i] == " ":
                board[i] = human
                best = min(best, minimax(board, depth + 1, True))
                board[i] = " "
        return best

def best_move(board):
    best_val = float('-inf')
    move = -1
    for i in range(9):
        if board[i] == " ":
            board[i] = computer
            move_val = minimax(board, 0, False)
            board[i] = " "
            if move_val > best_val:
                best_val = move_val
                move = i
    return move

def play_game():
    while True:
        board = reset_board()
        while " " in board:
            print_board(board)
            try:
                move = int(input("Enter your move (1-9): ")) - 1
                if board[move] == " ":
                    board[move] = human
                else:
                    print("Invalid move! Try again.")
                    continue
            except (ValueError, IndexError):
                print("Invalid input! Please enter a number between 1 and 9.")
                continue
            
            if check_winner(board, human):
                print_board(board)
                print("You win! ")
                break
            
            if " " in board:
                move = best_move(board)
                board[move] = computer
                if check_winner(board, computer):
                    print_board(board)
                    print("Computer wins!")
                    break
            
        print_board(board)
        if check_tie(board):
            print("It's a tie!")
        
play_game()
